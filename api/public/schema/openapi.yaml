openapi: 3.0.3
info:
  title: ''
  description: |-
    API Details
    - Component: 
    - Reference: berichtservice
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/berichtservice) / [zip](https://github.com/ConductionNL/berichtservice/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](/schema/berichtservice.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 

    De Berichtenservice faciliteert het versturen van berichten (bijvoorbeeld aan de hand van WRC sjablonen) en het rapporteren daarover. Hiervoor levert het zowel bulk-capaciteiten (voor bijvoorbeeld het versturen van mailings), als opvolg-capaciteiten (voor het controleren van bijvoorbeeld het aankomen van emails). Vooralsnog ondersteunt de Berichtenservice het versturen van mails en sms-berichten, maar er wordt nagedacht over het toevoegen van een post route en chatfunctionaliteit (social media). Het kan hierbij zowel zelfstandig opereren, als een front leveren voor functionaliteit van derden (Mailgun, Mailchimp, Messagbird, etc)
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /messages:
    get:
      operationId: getMessageCollection
      tags:
        - Message
      responses:
        200:
          description: 'Message collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Message.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Message.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
      summary: 'Retrieves the collection of Message resources.'
      description: 'Retrieves the collection of Message resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[reciever]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[sender]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[data]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[status]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[externalServiceId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[send]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'send[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'send[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'send[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'send[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postMessageCollection
      tags:
        - Message
      responses:
        201:
          description: 'Message resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
          links:
            GetMessageItem:
              operationId: getMessageItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /messages/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Message resource.'
      description: 'Creates a Message resource.'
      parameters: []
      requestBody:
        description: 'The new Message resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Message.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Message.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Message-write'
        required: true
      deprecated: false
    parameters: []
  '/messages/{id}':
    get:
      operationId: getMessageItem
      tags:
        - Message
      responses:
        200:
          description: 'Message resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Message resource.'
      description: 'Retrieves a Message resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putMessageItem
      tags:
        - Message
      responses:
        200:
          description: 'Message resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
          links:
            GetMessageItem:
              operationId: getMessageItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /messages/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Message resource.'
      description: 'Replaces the Message resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Message resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Message.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Message.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Message-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteMessageItem
      tags:
        - Message
      responses:
        204:
          description: 'Message resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Message resource.'
      description: 'Removes the Message resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/messages/{id}/audit_trail':
    get:
      operationId: get_audit_trailMessageItem
      tags:
        - Message
      responses:
        200:
          description: 'Message resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Message resource.'
      description: 'Retrieves a Message resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/messages/{id}/change_log':
    get:
      operationId: get_change_logsMessageItem
      tags:
        - Message
      responses:
        200:
          description: 'Message resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Message resource.'
      description: 'Retrieves a Message resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /send_lists:
    get:
      operationId: getSendListCollection
      tags:
        - SendList
      responses:
        200:
          description: 'SendList collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/SendList.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/SendList.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
      summary: 'Retrieves the collection of SendList resources.'
      description: 'Retrieves the collection of SendList resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: mail
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: phone
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[mail]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[phone]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postSendListCollection
      tags:
        - SendList
      responses:
        201:
          description: 'SendList resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
          links:
            GetSendListItem:
              operationId: getSendListItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /send_lists/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a SendList resource.'
      description: 'Creates a SendList resource.'
      parameters: []
      requestBody:
        description: 'The new SendList resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/SendList.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        required: true
      deprecated: false
    parameters: []
  '/send_lists/{id}':
    get:
      operationId: getSendListItem
      tags:
        - SendList
      responses:
        200:
          description: 'SendList resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a SendList resource.'
      description: 'Retrieves a SendList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putSendListItem
      tags:
        - SendList
      responses:
        200:
          description: 'SendList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
          links:
            GetSendListItem:
              operationId: getSendListItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /send_lists/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the SendList resource.'
      description: 'Replaces the SendList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated SendList resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/SendList.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteSendListItem
      tags:
        - SendList
      responses:
        204:
          description: 'SendList resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the SendList resource.'
      description: 'Removes the SendList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchSendListItem
      tags:
        - SendList
      responses:
        200:
          description: 'SendList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
          links:
            GetSendListItem:
              operationId: getSendListItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /send_lists/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the SendList resource.'
      description: 'Updates the SendList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated SendList resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        required: true
      deprecated: false
    parameters: []
  /services:
    get:
      operationId: getServiceCollection
      tags:
        - Service
      responses:
        200:
          description: 'Service collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Service.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Service.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
      summary: 'Retrieves the collection of Service resources.'
      description: 'Retrieves the collection of Service resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[authorization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[configuration]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: authorization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'authorization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: configuration
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'configuration[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postServiceCollection
      tags:
        - Service
      responses:
        201:
          description: 'Service resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
          links:
            GetServiceItem:
              operationId: getServiceItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /services/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Service resource.'
      description: 'Creates a Service resource.'
      parameters: []
      requestBody:
        description: 'The new Service resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Service.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Service.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Service-write'
        required: true
      deprecated: false
    parameters: []
  '/services/{id}':
    get:
      operationId: getServiceItem
      tags:
        - Service
      responses:
        200:
          description: 'Service resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Service resource.'
      description: 'Retrieves a Service resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putServiceItem
      tags:
        - Service
      responses:
        200:
          description: 'Service resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
          links:
            GetServiceItem:
              operationId: getServiceItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /services/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Service resource.'
      description: 'Replaces the Service resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Service resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Service.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Service.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Service-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteServiceItem
      tags:
        - Service
      responses:
        204:
          description: 'Service resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Service resource.'
      description: 'Removes the Service resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/services/{id}/audit_trail':
    get:
      operationId: get_audit_trailServiceItem
      tags:
        - Service
      responses:
        200:
          description: 'Service resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Service resource.'
      description: 'Retrieves a Service resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/services/{id}/change_log':
    get:
      operationId: get_change_logsServiceItem
      tags:
        - Service
      responses:
        200:
          description: 'Service resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Service resource.'
      description: 'Retrieves a Service resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /subscribers:
    get:
      operationId: getSubscriberCollection
      tags:
        - Subscriber
      responses:
        200:
          description: 'Subscriber collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Subscriber.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Subscriber.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
      summary: 'Retrieves the collection of Subscriber resources.'
      description: 'Retrieves the collection of Subscriber resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[email]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateInvited]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateAcceptedOrganization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateAcceptedUser]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateInvited[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateInvited[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateInvited[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateInvited[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedOrganization[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedOrganization[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedOrganization[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedOrganization[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedUser[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedUser[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedUser[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAcceptedUser[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: email
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'email[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postSubscriberCollection
      tags:
        - Subscriber
      responses:
        201:
          description: 'Subscriber resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
          links:
            GetSubscriberItem:
              operationId: getSubscriberItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /subscribers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Subscriber resource.'
      description: 'Creates a Subscriber resource.'
      parameters: []
      requestBody:
        description: 'The new Subscriber resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscriber.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Subscriber.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
        required: true
      deprecated: false
    parameters: []
  '/subscribers/{id}':
    get:
      operationId: getSubscriberItem
      tags:
        - Subscriber
      responses:
        200:
          description: 'Subscriber resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Subscriber resource.'
      description: 'Retrieves a Subscriber resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putSubscriberItem
      tags:
        - Subscriber
      responses:
        200:
          description: 'Subscriber resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
          links:
            GetSubscriberItem:
              operationId: getSubscriberItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /subscribers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Subscriber resource.'
      description: 'Replaces the Subscriber resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Subscriber resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscriber.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Subscriber.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteSubscriberItem
      tags:
        - Subscriber
      responses:
        204:
          description: 'Subscriber resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Subscriber resource.'
      description: 'Removes the Subscriber resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchSubscriberItem
      tags:
        - Subscriber
      responses:
        200:
          description: 'Subscriber resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
          links:
            GetSubscriberItem:
              operationId: getSubscriberItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /subscribers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Subscriber resource.'
      description: 'Updates the Subscriber resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Subscriber resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscriber.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
        required: true
      deprecated: false
    parameters: []
components:
  schemas:
    Attachment-read:
      type: object
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          type: string
        uri:
          maxLength: 255
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    Attachment-write:
      type: object
      properties:
        name:
          type: string
        uri:
          maxLength: 255
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    Attachment.jsonld-read:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          type: string
        uri:
          maxLength: 255
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    Attachment.jsonld-write:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        uri:
          maxLength: 255
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Message-read:
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        reciever:
          maxLength: 255
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          maxLength: 255
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          maxLength: 255
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          maxLength: 255
          description: 'The current status of this message'
          type: string
        externalServiceId:
          maxLength: 255
          description: 'id of this message with the message service'
          type: string
          nullable: true
        send:
          description: 'The moment this message was send'
          type: string
          format: date-time
          nullable: true
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment-read'
    Message-write:
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        reciever:
          maxLength: 255
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          maxLength: 255
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          maxLength: 255
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          maxLength: 255
          description: 'The current status of this message'
          type: string
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service-write'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment-write'
    Message.jsonld-read:
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        reciever:
          maxLength: 255
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          maxLength: 255
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          maxLength: 255
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          maxLength: 255
          description: 'The current status of this message'
          type: string
        externalServiceId:
          maxLength: 255
          description: 'id of this message with the message service'
          type: string
          nullable: true
        send:
          description: 'The moment this message was send'
          type: string
          format: date-time
          nullable: true
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service.jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment.jsonld-read'
    Message.jsonld-write:
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        reciever:
          maxLength: 255
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          maxLength: 255
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          maxLength: 255
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          maxLength: 255
          description: 'The current status of this message'
          type: string
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service.jsonld-write'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment.jsonld-write'
    SendList-read:
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this SendList.'
          type: string
        description:
          maxLength: 255
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          maxLength: 255
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          maxLength: 255
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber-read'
      required:
        - name
        - organization
    SendList-write:
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      required:
        - name
        - organization
      properties:
        name:
          maxLength: 255
          description: 'The name of this SendList.'
          type: string
        description:
          maxLength: 255
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          maxLength: 255
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          maxLength: 255
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber-write'
    SendList.jsonld-read:
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this SendList.'
          type: string
        description:
          maxLength: 255
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          maxLength: 255
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          maxLength: 255
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber.jsonld-read'
      required:
        - name
        - organization
    SendList.jsonld-write:
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      required:
        - name
        - organization
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'The name of this SendList.'
          type: string
        description:
          maxLength: 255
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          maxLength: 255
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          maxLength: 255
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber.jsonld-write'
    Service-read:
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        type:
          maxLength: 255
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          maxLength: 255
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          maxLength: 255
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - authorization
    Service-write:
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        type:
          maxLength: 255
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          maxLength: 255
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          maxLength: 255
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
      required:
        - organization
        - authorization
    Service.jsonld-read:
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        type:
          maxLength: 255
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          maxLength: 255
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          maxLength: 255
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - authorization
    Service.jsonld-write:
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          maxLength: 255
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          maxLength: 255
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          maxLength: 255
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
      required:
        - organization
        - authorization
    Subscriber-read:
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        email:
          maxLength: 255
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateInvited:
          description: 'The moment the invite was send'
          type: string
          format: date-time
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList-read'
      required:
        - sendLists
    Subscriber-write:
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        email:
          maxLength: 255
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList-write'
      required:
        - sendLists
    Subscriber.jsonld-read:
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        email:
          maxLength: 255
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateInvited:
          description: 'The moment the invite was send'
          type: string
          format: date-time
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList.jsonld-read'
      required:
        - sendLists
    Subscriber.jsonld-write:
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          maxLength: 255
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList.jsonld-write'
      required:
        - sendLists
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
