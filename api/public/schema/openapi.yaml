openapi: 3.0.2
info:
  title: ''
  version: V1.0
  description: |
    API Details
    - Component: 
    - Reference: berichtservice
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/berichtservice) / [zip](https://github.com/ConductionNL/berichtservice/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](/schema/berichtservice.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 

    De Berichtenservice faciliteert het versturen van berichten (bijvoorbeeld aan de hand van WRC sjablonen) en het rapporteren daarover. Hiervoor levert het zowel bulk-capaciteiten (voor bijvoorbeeld het versturen van mailings), als opvolg-capaciteiten (voor het controleren van bijvoorbeeld het aankomen van emails). Vooralsnog ondersteunt de Berichtenservice het versturen van mails en sms-berichten, maar er wordt nagedacht over het toevoegen van een post route en chatfunctionaliteit (social media). Het kan hierbij zowel zelfstandig opereren, als een front leveren voor functionaliteit van derden (Mailgun, Mailchimp, Messagbird, etc)         
paths:
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /messages:
    get:
      tags:
        - Message
      operationId: getMessageCollection
      summary: 'Retrieves the collection of Message resources.'
      responses:
        200:
          description: 'Message collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Message:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Message:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[reciever]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[sender]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[data]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[externalServiceId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[send]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'send[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'send[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'send[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'send[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Message
      operationId: postMessageCollection
      summary: 'Creates a Message resource.'
      responses:
        201:
          description: 'Message resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
          links:
            GetMessageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMessageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /messages/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Message:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Message:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Message-write'
        description: 'The new Message resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/messages/{id}':
    get:
      tags:
        - Message
      operationId: getMessageItem
      summary: 'Retrieves a Message resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Message resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Message
      operationId: putMessageItem
      summary: 'Replaces the Message resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Message resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Message:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Message:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Message-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Message-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Message-write'
        description: 'The updated Message resource'
    delete:
      tags:
        - Message
      operationId: deleteMessageItem
      summary: 'Removes the Message resource.'
      responses:
        204:
          description: 'Message resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/messages/{id}/audit_trail':
    get:
      tags:
        - Message
      operationId: get_audit_trailMessageItem
      summary: 'Retrieves a Message resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Message resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/messages/{id}/change_log':
    get:
      tags:
        - Message
      operationId: get_change_logsMessageItem
      summary: 'Retrieves a Message resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Message resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Message:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Message-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Message-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Message-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /send_lists:
    get:
      tags:
        - SendList
      operationId: getSendListCollection
      summary: 'Retrieves the collection of SendList resources.'
      responses:
        200:
          description: 'SendList collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/SendList:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/SendList:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
      parameters:
        -
          name: mail
          in: query
          required: false
          schema:
            type: boolean
        -
          name: phone
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[mail]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[phone]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - SendList
      operationId: postSendListCollection
      summary: 'Creates a SendList resource.'
      responses:
        201:
          description: 'SendList resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
          links:
            GetSendListItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSendListItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /send_lists/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        description: 'The new SendList resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/send_lists/{id}':
    get:
      tags:
        - SendList
      operationId: getSendListItem
      summary: 'Retrieves a SendList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'SendList resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - SendList
      operationId: deleteSendListItem
      summary: 'Removes the SendList resource.'
      responses:
        204:
          description: 'SendList resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - SendList
      operationId: putSendListItem
      summary: 'Replaces the SendList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'SendList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        description: 'The updated SendList resource'
    patch:
      tags:
        - SendList
      operationId: patchSendListItem
      summary: 'Updates the SendList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'SendList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        description: 'The updated SendList resource'
  /services:
    get:
      tags:
        - Service
      operationId: getServiceCollection
      summary: 'Retrieves the collection of Service resources.'
      responses:
        200:
          description: 'Service collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Service:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Service:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[authorization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[configuration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: authorization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'authorization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: configuration
          in: query
          required: false
          schema:
            type: string
        -
          name: 'configuration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Service
      operationId: postServiceCollection
      summary: 'Creates a Service resource.'
      responses:
        201:
          description: 'Service resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
          links:
            GetServiceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getServiceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /services/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Service:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Service:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Service-write'
        description: 'The new Service resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/services/{id}':
    get:
      tags:
        - Service
      operationId: getServiceItem
      summary: 'Retrieves a Service resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Service resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Service
      operationId: putServiceItem
      summary: 'Replaces the Service resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Service resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Service:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Service:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Service-write'
        description: 'The updated Service resource'
    delete:
      tags:
        - Service
      operationId: deleteServiceItem
      summary: 'Removes the Service resource.'
      responses:
        204:
          description: 'Service resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/services/{id}/audit_trail':
    get:
      tags:
        - Service
      operationId: get_audit_trailServiceItem
      summary: 'Retrieves a Service resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Service resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/services/{id}/change_log':
    get:
      tags:
        - Service
      operationId: get_change_logsServiceItem
      summary: 'Retrieves a Service resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Service resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /subscribers:
    get:
      tags:
        - Subscriber
      operationId: getSubscriberCollection
      summary: 'Retrieves the collection of Subscriber resources.'
      responses:
        200:
          description: 'Subscriber collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Subscriber:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Subscriber:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[email]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateInvited]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateAcceptedOrganization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateAcceptedUser]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateInvited[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInvited[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInvited[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInvited[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedOrganization[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedOrganization[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedOrganization[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedOrganization[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          required: false
          schema:
            type: string
        -
          name: 'email[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Subscriber
      operationId: postSubscriberCollection
      summary: 'Creates a Subscriber resource.'
      responses:
        201:
          description: 'Subscriber resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
          links:
            GetSubscriberItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSubscriberItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /subscribers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscriber:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Subscriber:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
        description: 'The new Subscriber resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/subscribers/{id}':
    get:
      tags:
        - Subscriber
      operationId: getSubscriberItem
      summary: 'Retrieves a Subscriber resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Subscriber resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Subscriber
      operationId: deleteSubscriberItem
      summary: 'Removes the Subscriber resource.'
      responses:
        204:
          description: 'Subscriber resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Subscriber
      operationId: putSubscriberItem
      summary: 'Replaces the Subscriber resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Subscriber resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscriber:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Subscriber:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
        description: 'The updated Subscriber resource'
    patch:
      tags:
        - Subscriber
      operationId: patchSubscriberItem
      summary: 'Updates the Subscriber resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Subscriber resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Subscriber:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Subscriber-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscriber:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Subscriber-write'
        description: 'The updated Subscriber resource'
components:
  schemas:
    Attachment-read:
      type: object
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          type: string
        uri:
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    Attachment-write:
      type: object
      properties:
        name:
          type: string
        uri:
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    'Attachment:jsonld-read':
      type: object
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          type: string
        uri:
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    'Attachment:jsonld-write':
      type: object
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        uri:
          description: 'Either a contact component person or contact list that will recieve this message'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mime:
          type: string
        resources:
          type: array
          items:
            type: string
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Message-read:
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        reciever:
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The current status of this message'
          type: string
        externalServiceId:
          description: 'id of this message with the message service'
          type: string
          nullable: true
        send:
          description: 'The moment this message was send'
          type: string
          format: date-time
          nullable: true
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment-read'
    Message-write:
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        reciever:
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The current status of this message'
          type: string
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service-write'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment-write'
    'Message:jsonld-read':
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        reciever:
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The current status of this message'
          type: string
        externalServiceId:
          description: 'id of this message with the message service'
          type: string
          nullable: true
        send:
          description: 'The moment this message was send'
          type: string
          format: date-time
          nullable: true
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment:jsonld-read'
    'Message:jsonld-write':
      type: object
      description: 'A  message to be send to a spefic recipient or list troug a message service.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        reciever:
          description: 'Either a contact component person or contact list or an plain email that will recieve this message'
          type: string
          nullable: true
        sender:
          description: 'Either a contact component person, or wrc application or an plain email that sends this message'
          type: string
          nullable: true
        subject:
          description: 'subject of the mail'
          type: string
          nullable: true
        content:
          description: 'The webresource template object (from wrc) that is used as content for this message'
          type: string
        type:
          description: 'The type of this message.'
          type: string
          nullable: true
        resource:
          description: 'A resource used for this message.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        data:
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The current status of this message'
          type: string
        service:
          description: 'The service used to send this message'
          $ref: '#/components/schemas/Service:jsonld-write'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment:jsonld-write'
    SendList-read:
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this SendList.'
          type: string
        description:
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber-read'
      required:
        - name
        - organization
    SendList-write:
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      required:
        - name
        - organization
      properties:
        name:
          description: 'The name of this SendList.'
          type: string
        description:
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber-write'
    'SendList:jsonld-read':
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this SendList.'
          type: string
        description:
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber:jsonld-read'
      required:
        - name
        - organization
    'SendList:jsonld-write':
      type: object
      description: 'SendList is a way for Organizations to send messages through email or phone.'
      required:
        - name
        - organization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this SendList.'
          type: string
        description:
          description: 'The description of this SendList.'
          type: string
          nullable: true
        mail:
          description: 'True if this is an mailing list.'
          type: boolean
        phone:
          description: 'True if this is an phone list.'
          type: boolean
        organization:
          description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
          type: string
        resource:
          description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
          type: string
          nullable: true
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber:jsonld-write'
    Service-read:
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        type:
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - authorization
    Service-write:
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        type:
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
      required:
        - organization
        - authorization
    'Service:jsonld-read':
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        type:
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - authorization
    'Service:jsonld-write':
      type: object
      description: 'A service that sends messages e.g. email or sms.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
          type: string
        organization:
          description: 'The RSIN of the organization that ownes this service'
          type: string
        authorization:
          description: 'The autorization be it password or api key that is used to connect to the service'
          type: string
          nullable: true
        configuration:
          description: 'Any specific setting for this service'
          type: array
          items:
            type: string
      required:
        - organization
        - authorization
    Subscriber-read:
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        email:
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateInvited:
          description: 'The moment the invite was send'
          type: string
          format: date-time
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList-read'
      required:
        - sendLists
    Subscriber-write:
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        email:
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList-write'
      required:
        - sendLists
    'Subscriber:jsonld-read':
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        email:
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateInvited:
          description: 'The moment the invite was send'
          type: string
          format: date-time
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList:jsonld-read'
      required:
        - sendLists
    'Subscriber:jsonld-write':
      type: object
      description: 'SendList is a way for Applications to send messages through email or phone.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        email:
          description: 'email of the subscriber'
          type: string
          nullable: true
        resource:
          description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateAcceptedOrganization:
          description: 'The moment the invite was accepted by the organization'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        sendLists:
          type: array
          items:
            $ref: '#/components/schemas/SendList:jsonld-write'
      required:
        - sendLists
definitions:
  SendList-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this SendList.'
        type: string
        example: 'News email'
        maxLength: 255
      description:
        description: 'The description of this SendList.'
        type: string
        example: 'Mailing list for sending news'
        maxLength: 255
      mail:
        description: 'True if this is an mailing list.'
        type: bool
        example: 'true'
      phone:
        description: 'True if this is an phone list.'
        type: bool
        example: 'true'
      organization:
        description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
        type: string
        example: 'https://dev.id-vault.com/api/v1/wrc/organizations/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      resource:
        description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
        type: string
        example: 'https://dev.larping.eu/api/v1/wrc/organizations/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      dateCreated:
        description: 'The moment this proof was created'
        type: \Datetime
      dateModified:
        description: 'The moment this proof was last Modified'
        type: \Datetime
      subscribers: []
    required:
      - name
      - organization
  SendList-write:
    properties:
      name:
        description: 'The name of this SendList.'
        type: string
        example: 'News email'
        maxLength: 255
      description:
        description: 'The description of this SendList.'
        type: string
        example: 'Mailing list for sending news'
        maxLength: 255
      mail:
        description: 'True if this is an mailing list.'
        type: bool
        example: 'true'
      phone:
        description: 'True if this is an phone list.'
        type: bool
        example: 'true'
      organization:
        description: 'An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)'
        type: string
        example: 'https://dev.id-vault.com/api/v1/wrc/organizations/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      resource:
        description: 'A extra resource (Mostly used if this list is for an organization in a id-vault application)'
        type: string
        example: 'https://dev.larping.eu/api/v1/wrc/organizations/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      subscribers: []
    required:
      - name
      - organization
  Message-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      reciever:
        description: 'Either a contact component person or contact list or an plain email that will recieve this message'
        type: string
        example: 'https://cc.zaakonline.nl/people/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      sender:
        description: 'Either a contact component person, or wrc application or an plain email that sends this message'
        type: string
        example: 'https://cc.zaakonline.nl/people/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      subject:
        description: 'subject of the mail'
        type: string
        example: 'reset mail'
        maxLength: 255
      content:
        description: 'The webresource template object (from wrc) that is used as content for this message'
        type: string
        example: 'https://wrc.zaakonline.nl/templates/013276cc-1483-46b4-ad5b-1cba5acf6d9f'
      type:
        description: 'The type of this message.'
        type: string
        example: WarningMessageX
        maxLength: 255
      resource:
        description: 'A resource used for this message.'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/uc/users/2881bb7a-4e1a-49ga-a824-af6c9917a3e5'
        format: url
        maxLength: 255
      data: []
      status:
        description: 'The current status of this message'
        type: string
        example: concept
        maxLength: 255
      externalServiceId:
        description: 'id of this message with the message service'
        type: \The
        example: 013276cc-1483-46b4-ad5b-1cba5acf6d9f
        maxLength: 255
      send:
        description: 'The moment this message was send'
        type: \DateTime
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      service:
        description: 'The service used to send this message'
        type: \Service
      attachments: []
    required: []
  Message-write:
    properties:
      reciever:
        description: 'Either a contact component person or contact list or an plain email that will recieve this message'
        type: string
        example: 'https://cc.zaakonline.nl/people/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      sender:
        description: 'Either a contact component person, or wrc application or an plain email that sends this message'
        type: string
        example: 'https://cc.zaakonline.nl/people/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        maxLength: 255
      subject:
        description: 'subject of the mail'
        type: string
        example: 'reset mail'
        maxLength: 255
      content:
        description: 'The webresource template object (from wrc) that is used as content for this message'
        type: string
        example: 'https://wrc.zaakonline.nl/templates/013276cc-1483-46b4-ad5b-1cba5acf6d9f'
      type:
        description: 'The type of this message.'
        type: string
        example: WarningMessageX
        maxLength: 255
      resource:
        description: 'A resource used for this message.'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/uc/users/2881bb7a-4e1a-49ga-a824-af6c9917a3e5'
        format: url
        maxLength: 255
      data: []
      status:
        description: 'The current status of this message'
        type: string
        example: concept
        maxLength: 255
      service:
        description: 'The service used to send this message'
        type: \Service
      attachments: []
    required: []
  Subscriber-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      email:
        description: 'email of the subscriber'
        type: string
        example: test@conduction.nl
        maxLength: 255
      resource:
        description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
        type: string
        example: 'https://id-vault.com/api/v1/wac/groups/cd48e62a-0a5b-4ace-a519-01321a928dd0'
        format: url
        maxLength: 255
      dateInvited:
        description: 'The moment the invite was send'
        type: \DateTime
        example: '20190101'
      dateAcceptedOrganization:
        description: 'The moment the invite was accepted by the organization'
        type: \DateTime
        example: '20190101'
      dateAcceptedUser:
        description: 'The moment the invite was accepted by the user'
        type: \DateTime
        example: '20190101'
      dateCreated:
        description: 'The moment this proof was created'
        type: \Datetime
      dateModified:
        description: 'The moment this proof was last Modified'
        type: \Datetime
      sendLists: []
    required:
      - sendLists
  Subscriber-write:
    properties:
      email:
        description: 'email of the subscriber'
        type: string
        example: test@conduction.nl
        maxLength: 255
      resource:
        description: 'resource of this subscriber, for example: wac/group, uc/user or cc/person'
        type: string
        example: 'https://id-vault.com/api/v1/wac/groups/cd48e62a-0a5b-4ace-a519-01321a928dd0'
        format: url
        maxLength: 255
      dateAcceptedOrganization:
        description: 'The moment the invite was accepted by the organization'
        type: \DateTime
        example: '20190101'
      dateAcceptedUser:
        description: 'The moment the invite was accepted by the user'
        type: \DateTime
        example: '20190101'
      sendLists: []
    required:
      - sendLists
  Service-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      type:
        description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
        type: string
        example: smtp
        maxLength: 255
      organization:
        description: 'The RSIN of the organization that ownes this service'
        type: string
        example: '002851234'
        maxLength: 255
      authorization:
        description: 'The autorization be it password or api key that is used to connect to the service'
        type: string
        example: 013276cc-1483-46b4-ad5b-1cba5acf6d9f
        maxLength: 255
      configuration:
        description: 'Any specific setting for this service'
        type: array
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
    required:
      - organization
      - authorization
  Service-write:
    properties:
      type:
        description: 'The type of this service, iether use a pre configures service or just plain simple old smtp'
        type: string
        example: smtp
        maxLength: 255
      organization:
        description: 'The RSIN of the organization that ownes this service'
        type: string
        example: '002851234'
        maxLength: 255
      authorization:
        description: 'The autorization be it password or api key that is used to connect to the service'
        type: string
        example: 013276cc-1483-46b4-ad5b-1cba5acf6d9f
        maxLength: 255
      configuration:
        description: 'Any specific setting for this service'
        type: array
    required:
      - organization
      - authorization
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-06-21 12:31:09'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-06-21 12:31:09'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-06-21 12:31:09'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-06-21 12:31:09'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: SendList
    description: |+
      SendList is a way for Organizations to send messages through email or phone.

  -
    name: Message
    description: |+
      A  message to be send to a spefic recipient or list troug a message service.

  -
    name: Subscriber
    description: |+
      SendList is a way for Applications to send messages through email or phone.

  -
    name: Service
    description: |+
      A service that sends messages e.g. email or sms.

  -
    name: ChangeLog
    description: |-
      An resource representing a log line.

      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: AuditTrail
    description: |-
      An resource representing a log line.

      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
host: irc.zaakonline.nl
servers:
  -
    name: zuid-drecht.nl
    url: berichtservice.dev.zuid-drecht.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
